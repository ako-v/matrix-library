{"version":3,"file":"toast.es.js","sources":["../src/components/toast/Toast.tsx"],"sourcesContent":["import { useEffect } from \"react\";\r\nimport { Toast as Root, ToastClose, ToastProvider, ToastTitle, ToastViewport } from \"./toast-components\";\r\n\r\nimport { useToasts, toastParams } from \"./use-toast\";\r\nimport { InfoCircleIcon } from \"../Icons/InfoCircleIcon\";\r\nimport { SuccessCircleIcon } from \"../Icons/SuccessCircleIcon\";\r\nimport { WarningCircleIcon } from \"../Icons/WarningCircleIcon\";\r\nimport { DangerCircleIcon } from \"../Icons/DangerCircleIcon\";\r\n\r\ntype ToastProps = {\r\n  limit?: number;\r\n  duration?: number;\r\n};\r\n\r\nfunction Toast({ limit = 3, duration = 5000 }: ToastProps) {\r\n  const { toasts, removeToast } = useToasts();\r\n\r\n  useEffect(() => {\r\n    if (limit !== undefined) {\r\n      toastParams.limit = limit;\r\n    }\r\n  }, [limit, duration]);\r\n\r\n  return (\r\n    <ToastProvider duration={duration}>\r\n      {Array.from(toasts).map(([key, { message, variant }]) => {\r\n        return (\r\n          <Root\r\n            key={key}\r\n            variant={variant}\r\n            onOpenChange={open => {\r\n              if (!open) {\r\n                setTimeout(() => removeToast(key), 100); // let the animation finish then remove the toast\r\n              }\r\n            }}\r\n          >\r\n            <div className=\"flex gap-2 items-center\">\r\n              <div>\r\n                {variant === \"danger\" && <DangerCircleIcon className=\"w-5 h-5\" />}\r\n                {variant === \"success\" && <SuccessCircleIcon className=\"w-5 h-5\" />}\r\n                {variant === \"info\" && <InfoCircleIcon className=\"w-5 h-5\" />}\r\n                {variant === \"warning\" && <WarningCircleIcon className=\"w-5 h-5\" />}\r\n              </div>\r\n              {message && <ToastTitle>{message}</ToastTitle>}\r\n            </div>\r\n            <ToastClose />\r\n            {/* {action} */}\r\n          </Root>\r\n        );\r\n      })}\r\n      <ToastViewport />\r\n    </ToastProvider>\r\n  );\r\n}\r\nToast.displayName = \"Toast\";\r\n\r\nexport { Toast, type ToastProps };\r\n"],"names":["Toast","limit","duration","toasts","removeToast","useToasts","useEffect","toastParams","jsxs","ToastProvider","key","message","variant","Root","open","jsx","DangerCircleIcon","SuccessCircleIcon","InfoCircleIcon","WarningCircleIcon","ToastTitle","ToastClose","ToastViewport"],"mappings":";;;;;;;;AAcA,SAASA,EAAM,EAAE,OAAAC,IAAQ,GAAG,UAAAC,IAAW,OAAoB;AACzD,QAAM,EAAE,QAAAC,GAAQ,aAAAC,EAAY,IAAIC,EAAU;AAE1C,SAAAC,EAAU,MAAM;AACd,IAAIL,MAAU,WACZM,EAAY,QAAQN;AAAA,EACtB,GACC,CAACA,GAAOC,CAAQ,CAAC,GAGlB,gBAAAM,EAACC,KAAc,UAAAP,GACZ,UAAA;AAAA,IAAM,MAAA,KAAKC,CAAM,EAAE,IAAI,CAAC,CAACO,GAAK,EAAE,SAAAC,GAAS,SAAAC,EAAQ,CAAC,MAE/C,gBAAAJ;AAAA,MAACK;AAAAA,MAAA;AAAA,QAEC,SAAAD;AAAA,QACA,cAAc,CAAQE,MAAA;AACpB,UAAKA,KACH,WAAW,MAAMV,EAAYM,CAAG,GAAG,GAAG;AAAA,QAE1C;AAAA,QAEA,UAAA;AAAA,UAAC,gBAAAF,EAAA,OAAA,EAAI,WAAU,2BACb,UAAA;AAAA,YAAA,gBAAAA,EAAC,OACE,EAAA,UAAA;AAAA,cAAAI,MAAY,YAAY,gBAAAG,EAACC,GAAiB,EAAA,WAAU,WAAU;AAAA,cAC9DJ,MAAY,aAAc,gBAAAG,EAAAE,GAAA,EAAkB,WAAU,WAAU;AAAA,cAChEL,MAAY,UAAW,gBAAAG,EAAAG,GAAA,EAAe,WAAU,WAAU;AAAA,cAC1DN,MAAY,aAAc,gBAAAG,EAAAI,GAAA,EAAkB,WAAU,UAAU,CAAA;AAAA,YAAA,GACnE;AAAA,YACCR,KAAY,gBAAAI,EAAAK,GAAA,EAAY,UAAQT,EAAA,CAAA;AAAA,UAAA,GACnC;AAAA,4BACCU,GAAW,CAAA,CAAA;AAAA,QAAA;AAAA,MAAA;AAAA,MAjBPX;AAAA,IAmBP,CAEH;AAAA,sBACAY,GAAc,CAAA,CAAA;AAAA,EAAA,GACjB;AAEJ;AACAtB,EAAM,cAAc;"}