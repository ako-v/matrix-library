{"version":3,"file":"timepickercontent.es.js","sources":["../src/components/date-picker/TimePickerContent.tsx"],"sourcesContent":["import { HTMLAttributes, useEffect, useRef, useState } from \"react\";\r\n\r\nimport { cn } from \"../../lib/utils\";\r\n\r\ntype Time = { hour: number; minute: number; ampm: \"AM\" | \"PM\" };\r\n\r\ntype TimePickerContentProps = {\r\n  time: Time | undefined;\r\n  isOpen: boolean;\r\n  onTimeChange: (time: Time | undefined) => void;\r\n  slotsProps?: {\r\n    content?: HTMLAttributes<HTMLDivElement>;\r\n  };\r\n};\r\n\r\nconst getNow = (): Time => {\r\n  return { hour: new Date().getHours() % 12, minute: new Date().getMinutes(), ampm: new Date().getHours() < 12 ? \"AM\" : \"PM\" };\r\n};\r\n\r\nconst TimePickerContent: React.FC<TimePickerContentProps> = ({ isOpen, time, onTimeChange, slotsProps }) => {\r\n  const [selectedtime, setSelectedTime] = useState<Time>(time ?? getNow());\r\n  const selectedTimeRef = useRef<Time>(selectedtime);\r\n\r\n  const hourRef = useRef<HTMLDivElement>(null);\r\n  const minuteRef = useRef<HTMLDivElement>(null);\r\n\r\n  const itemHeight = 32; // Assuming each item height is 40px\r\n  const marginBetweenItems = 8; // Assuming margin between each item is 8px\r\n\r\n  // Function to scroll to a specific hour\r\n  const scrollToHour = (index: number) => {\r\n    hourRef?.current?.scrollTo({\r\n      top: index * (itemHeight + marginBetweenItems),\r\n      behavior: \"smooth\",\r\n    });\r\n  };\r\n\r\n  // Function to scroll to a specific minute\r\n  const scrollToMinute = (index: number) => {\r\n    minuteRef?.current?.scrollTo({\r\n      top: index * (itemHeight + marginBetweenItems),\r\n      behavior: \"smooth\",\r\n    });\r\n  };\r\n\r\n  const handleSethour = (hour: number) => {\r\n    selectedTimeRef.current = { ...selectedtime, hour };\r\n    setSelectedTime(selectedTimeRef.current);\r\n    onTimeChange(selectedTimeRef.current);\r\n  };\r\n\r\n  const handleSetMinute = (minute: number) => {\r\n    selectedTimeRef.current = { ...selectedtime, minute };\r\n    setSelectedTime(selectedTimeRef.current);\r\n    onTimeChange(selectedTimeRef.current);\r\n  };\r\n\r\n  const handleSetAMPM = (ampm: \"AM\" | \"PM\") => {\r\n    selectedTimeRef.current = { ...selectedtime, ampm };\r\n    setSelectedTime(selectedTimeRef.current);\r\n    onTimeChange(selectedTimeRef.current);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      setSelectedTime(time ?? getNow());\r\n    }\r\n  }, [isOpen, time]);\r\n\r\n  useEffect(() => {\r\n    // Center the selected hour/minute on mount\r\n    if (isOpen) {\r\n      setTimeout(() => {\r\n        scrollToHour(selectedTimeRef.current.hour - 1);\r\n        scrollToMinute(selectedTimeRef.current.minute);\r\n      });\r\n    }\r\n  }, [isOpen]);\r\n\r\n  return (\r\n    <div {...(slotsProps?.content ?? {})} className={cn(\"py-2 px-0 h-52 w-full flex justify-center gap-1\", slotsProps?.content?.className)}>\r\n      {/* Hour Selector */}\r\n      <div className=\"w-24 px-2 h-full relative overflow-auto thin-scrollbar\" ref={hourRef}>\r\n        {Array.from({ length: 12 }, (_, i) => i).map(hour => (\r\n          <button\r\n            style={{ height: itemHeight, marginBottom: marginBetweenItems }}\r\n            className={cn(\r\n              \"w-full flex justify-center items-center rounded-full text-sm font-bold text-text-400\",\r\n              hour + 1 === selectedtime.hour && \"bg-secondary\",\r\n            )}\r\n            key={hour + 1}\r\n            onClick={() => handleSethour(hour + 1)}\r\n          >\r\n            {(hour + 1).toString().padStart(2, \"0\")}\r\n          </button>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Minute Selector */}\r\n      <div className=\"h-full w-24 px-2 relative overflow-auto thin-scrollbar\" ref={minuteRef}>\r\n        {Array.from({ length: 60 }, (_, i) => i).map(minute => (\r\n          <button\r\n            style={{ height: itemHeight, marginBottom: marginBetweenItems }}\r\n            className={cn(\r\n              \"w-full flex justify-center items-center rounded-full text-sm font-bold text-text-400\",\r\n              minute === selectedtime.minute && \"bg-secondary\",\r\n            )}\r\n            key={minute}\r\n            onClick={() => handleSetMinute(minute)}\r\n          >\r\n            {minute.toString().padStart(2, \"0\")}\r\n          </button>\r\n        ))}\r\n      </div>\r\n\r\n      {/* AM/PM Selector */}\r\n      <div className=\"h-full w-24 px-2 relative overflow-auto thin-scrollbar\">\r\n        {[\"AM\", \"PM\"].map(ampm => (\r\n          <button\r\n            style={{ height: itemHeight, marginBottom: marginBetweenItems }}\r\n            className={cn(\r\n              \"w-full flex justify-center items-center rounded-full text-sm font-bold text-text-400\",\r\n              ampm === selectedtime.ampm && \"bg-secondary\",\r\n            )}\r\n            key={ampm}\r\n            onClick={() => handleSetAMPM(ampm as \"AM\" | \"PM\")}\r\n          >\r\n            {ampm}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport { TimePickerContent, type TimePickerContentProps, type Time };\r\n"],"names":["getNow","TimePickerContent","isOpen","time","onTimeChange","slotsProps","selectedtime","setSelectedTime","useState","selectedTimeRef","useRef","hourRef","minuteRef","itemHeight","marginBetweenItems","scrollToHour","index","scrollToMinute","handleSethour","hour","handleSetMinute","minute","handleSetAMPM","ampm","useEffect","jsxs","cn","jsx","_","i"],"mappings":"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"}