{"version":3,"file":"textfield.es.js","sources":["../src/components/text-field/TextField.tsx"],"sourcesContent":["import * as React from \"react\";\r\nimport { cva, VariantProps } from \"class-variance-authority\";\r\n\r\nimport { cn } from \"../../lib/utils\";\r\n\r\nconst textFieldVariants = cva(\r\n  \"flex w-full rounded-sm border border-input text-gray-800 bg-transparent p-0 text-xs font-medium shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-text-300 hover:border-primary-400 focus-within:border-primary-400 focus-within:outline-none focus-within:ring focus-within:ring-primary-100  disabled:cursor-not-allowed disabled:text-text-300 disabled:bg-gray-100 disabled:border-gray-100\",\r\n  {\r\n    variants: {\r\n      size: {\r\n        sm: \"h-7\",\r\n        md: \"h-9\",\r\n        lg: \"h-11\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      size: \"md\",\r\n    },\r\n  },\r\n);\r\n\r\ninterface TextFieldProps extends React.HTMLAttributes<HTMLDivElement>, VariantProps<typeof textFieldVariants> {\r\n  suffix?: React.ReactNode;\r\n  endButton?: React.ReactNode;\r\n  slotProps?: {\r\n    inputProps?: React.InputHTMLAttributes<HTMLInputElement>;\r\n  };\r\n}\r\n\r\nconst TextField = React.forwardRef<HTMLInputElement, TextFieldProps>(({ className, slotProps, suffix, endButton, size, ...props }, ref) => {\r\n  return (\r\n    <div {...props} className={cn(textFieldVariants({ size, className }))}>\r\n      <input\r\n        ref={ref}\r\n        {...(slotProps?.inputProps ?? {})}\r\n        className={cn(\r\n          \"focus:outline-none w-full h-full px-3 py-1 rounded-sm file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-text-300 \",\r\n          slotProps?.inputProps?.className,\r\n        )}\r\n      />\r\n      {typeof suffix === \"string\" || typeof suffix === \"number\" ? (\r\n        <span className=\"inline-flex items-center px-2 text-xs font-medium text-primary bg-primary-50 m-0.5 rounded-sm\">{suffix}</span>\r\n      ) : (\r\n        suffix\r\n      )}\r\n      {endButton}\r\n    </div>\r\n  );\r\n});\r\nTextField.displayName = \"TextField\";\r\n\r\nexport { TextField, type TextFieldProps };\r\n"],"names":["textFieldVariants","cva","TextField","React","className","slotProps","suffix","endButton","size","props","ref","jsxs","cn","jsx"],"mappings":";;;;AAKA,MAAMA,IAAoBC;AAAA,EACxB;AAAA,EACA;AAAA,IACE,UAAU;AAAA,MACR,MAAM;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,MAAA;AAAA,IAER;AAAA,IACA,iBAAiB;AAAA,MACf,MAAM;AAAA,IAAA;AAAA,EACR;AAEJ,GAUMC,IAAYC,EAAM,WAA6C,CAAC,EAAE,WAAAC,GAAW,WAAAC,GAAW,QAAAC,GAAQ,WAAAC,GAAW,MAAAC,GAAM,GAAGC,EAAA,GAASC,MAE9H,gBAAAC,EAAA,OAAA,EAAK,GAAGF,GAAO,WAAWG,EAAGZ,EAAkB,EAAE,MAAAQ,GAAM,WAAAJ,GAAW,CAAC,GAClE,UAAA;AAAA,EAAA,gBAAAS;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,KAAAH;AAAA,MACC,GAAIL,GAAW,cAAc,CAAC;AAAA,MAC/B,WAAWO;AAAA,QACT;AAAA,QACAP,GAAW,YAAY;AAAA,MAAA;AAAA,IACzB;AAAA,EACF;AAAA,EACC,OAAOC,KAAW,YAAY,OAAOA,KAAW,WAC/C,gBAAAO,EAAC,QAAK,EAAA,WAAU,iGAAiG,UAAAP,EAAA,CAAO,IAExHA;AAAA,EAEDC;AAAA,GACH,CAEH;AACDL,EAAU,cAAc;"}